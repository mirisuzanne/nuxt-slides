---
title: Agile Design Systems
event: Agile Denver
author: miriam
date: 2018-10-22
image: /images/agile-systems/_cover.jpg
tags: [css, sass, design systems, components, performance]
---

How can we incorporate patterns into our code,
using templates and pre-processors to iterate and automate
living design systems in an agile and integrated process?

<!-- slide -->

---
layout: title
---

<!-- slide -->

---
image: '/images/_mia/true-west.jpg'
alt: '2016 True West Award in Theater'
style:
  --image-size: 'contain'
---

<!-- slide -->

## **Devised** Theater `==` **Agile** Process

<!-- slide -->

![OddBird Faces](/images/_oddbird/allbirds.svg)

## 2008: [OddBird](https://oddbird.net)
Application **Design** & **Development**

<!-- slide -->

---
image: '/images/_oddbird/youngbirds.jpg'
alt: 'OddBird siblings (Jonny, Carl, and Miriam) in 1994'
---

<!-- slide -->

---
image: '/images/web-projects/coachhub.jpg'
alt: 'ORCAS CoachHub'
style:
  --image-size: 'contain'
---

<!-- slide -->

## US **Military**, **Coast Guard**, and **NIH**
Client: **ORCAS**, Field: **Health Care** <br />

<!-- slide -->

---
image: '/images/web-projects/qri.jpg'
alt: 'Quarq Race Intelligence'
style:
  --image-size: 'contain'
---

<!-- slide -->

## **Ironman** Championships
Client: **SRAM**, Field: **Professional Athletics**

<!-- slide -->

---
split:
  image: /images/_mia/sketch.svg
  size: contain
  margin: var(--gutter)
---

## Project **Manager**
UX **Designer** & Front End **Architect**

<!-- slide -->

## **Contract** Work
Launch + **Handoff**

<!-- slide -->

## On A **Budget** & **Timeline**
Integrated & Agile **Process**

<!-- slide -->

## Design **Systems**!
Intersection of **Design** & **Code** & **Documentation**

<!-- slide -->

---
image: '/images/patterns/lightning.jpg'
alt: Salesforce Lightning Design System
style:
  --image-position: 'top'
---

<!-- slide -->

---
image: '/images/patterns/lonely-planet-colors.jpg'
alt: Lonely Planet Design System
style:
  --image-position: 'top'
---

<!-- slide -->

---
image: '/images/patterns/chimp-grids.jpg'
alt: Mailchimp Grids
style:
  --image-position: 'top'
---

<!-- slide -->

---
image: '/images/agile-systems/herman-scale.jpg'
alt: Herman Scale Previews
style:
  --image-size: 'contain'
---

<!-- slide -->

---
image: '/images/patterns/NYC-m.jpg'
alt: 'M'
---

<!-- slide -->

---
image: '/images/patterns/NYC.jpg'
alt: 'New York City Transit Authority Graphic Standards Manual'
---

<!-- slide -->

---
image: '/images/patterns/NYC-date.jpg'
alt: '1970'
style:
  --image-size: 'contain'
---

<!-- slide -->

---
image: '/images/patterns/NYC-n.jpg'
alt: 'N'
---

<!-- slide -->

---
image: '/images/patterns/NYC-numbers.jpg'
alt: 'Numbers 5-8'
---

<!-- slide -->

---
image: '/images/patterns/NYC-sign.jpg'
alt: 'Diagram of sign construction'
style:
  --image-position: 'bottom'
---

<!-- slide -->

## ¬´ Nerd

<!-- slide -->

## Nerd ¬ª

<!-- slide -->

## **¬Ø\\\_(„ÉÑ)_/¬Ø**
## Nerd

<!-- slide -->

## Design *Systems*
**Style** Guides + **Tool**kits + **Pattern** Libraries + **???**

<!-- slide -->

---
image: '/images/patterns/chimp-voice.jpg'
alt: Mailchimp Voice
style:
  --image-position: 'top'
---

<!-- slide -->

---
image: '/images/patterns/lightning-motion.jpg'
alt: Salesforce LDS Motion System
style:
  --image-position: 'top'
---

<!-- slide -->

---
image: '/images/patterns/lego-library.jpg'
alt: 'Lego Component Library'
---

<!-- slide -->

---
image: '/images/agile-systems/lego-organizer.jpg'
alt: 'Lego Organizer'
---

<!-- slide -->

---
image: '/images/patterns/lego.jpg'
alt: 'Lego Airplane'
---

<!-- slide -->

## Design Systems `==` **Integration**
Design *&* Code *&* process *&* tools *&* ‚Ä¶ *&* ???

<!-- slide -->

---
image: '/images/patterns/lightning-code.jpg'
alt: 'LDS icons with markup'
---

<!-- slide -->

---
image: '/images/patterns/lightning-codex.jpg'
alt: 'Scribbled out: LDS icons with markup'
---

<!-- slide -->

## You are not **MailForce** or **InstaFace**
(unless you are)

<!-- slide -->

### Similar Problems
## **Unique Constraints**

<!-- slide -->

## (Team **Size**)

<!-- slide -->

## (Team **Structure**)

<!-- slide -->

## (Internal **vs.** Consulting)

<!-- slide -->

## (Is it **1970**?)

<!-- slide -->

![OddBird Faces](/images/_oddbird/allbirds.svg)

<!-- slide -->

### "If it doesn't have tests, **it's legacy code**"
Patterns must be **repeatable**

<!-- slide -->

### "If it's not documented, **it doesn't exist**"
Patterns must be **repeated**

<!-- slide -->

> Since OddBird thinks about handoff from the beginning,
> **maintenance has been super easy**.
> For example, 100% unit test coverage was a given.
> I never had to ask for it.
>
> ‚ÄîSara Taillon, **CTO** at **ORCAS**

<!-- slide -->

1. ~~**Why** Design Systems?~~
2. ## Pattern **Audit**
3. Start with **Design Tokens**
4. Integrated **Agile Process**
5. Define the **API**

<!-- slide -->

### **Existing** Apps:
## What Do We **Have**?

<!-- slide -->

## Take **Screenshots**
**Organize** into Groups

<!-- slide -->

---
image: '/images/agile-systems/pnc-buttons.jpg'
caption: |
  Image by
  [Brad Frost](http://bradfrost.com/blog/post/interface-inventory/)
---

<!-- slide -->

## cssstats.com

<!-- slide -->

---
image: '/images/agile-systems/stats-colors.jpg'
---

<!-- slide -->

---
image: '/images/agile-systems/stats-fonts.jpg'
---

<!-- slide -->

### **All** Apps:
## What Do We **Need**?

<!-- slide -->

1. ~~**Why** Design Systems?~~
2. ~~Pattern **Audit**~~
3. ## Start with **Design Tokens**
4. Integrated **Agile Process**
5. Define the **API**

<!-- slide -->

### ~~3. Start with **Design Tokens**~~
## 3. Start **Somewhere**, Stay **Agile**

<!-- slide -->

---
image: '/images/patterns/itcss-metrics.png'
style:
  --image-size: 'contain'
caption: |
  [**Inverted Triangle**](http://technotif.com/manage-large-css-projects-with-itcss/)
  by [**Harry Roberts**](https://twitter.com/csswizardry)
---

<!-- slide -->

---
image: '/images/patterns/un-itcss-metrics.png'
style:
  --image-size: 'contain'
caption: |
  **Normal Triangle** by ~~Maslow~~ **Miriam**
---

<!-- slide -->

---
image: '/images/patterns/itcss-layers.png'
style:
  --image-size: 'contain'
---

<!-- slide -->

## **Cascading** Style Sheets
Invented to create **re-usable patterns**

<!-- slide -->

## `.warning { color: red; }`

<!-- slide -->

## Design **Tokens** (Settings)
![Color preview screenshot](/images/agile-systems/color-preview.jpg)

<!-- slide -->

## CSS **Custom Properties**

```css
:root {
  --color-text-default: rgb(62, 62, 60);
  --color-text-warning: rgb(255, 183, 93);
  --color-text-error: rgb(194, 57, 52);
}

.example {
  background: var(--color-text-error);
}
```

<!-- slide -->

## üëç **Browser** Support

<!-- slide -->

## üëé Not **Meaningfully** Organized
## üëé Encourages **One-Offs**
## üëé Difficult to **Automate**

<!-- slide -->

## Sass **Variables**

```scss
$color-text-default: rgb(62, 62, 60);
$color-text-warning: rgb(255, 183, 93);
$color-text-error: rgb(194, 57, 52);

.example {
  background: $color-text-error;
}
```

<!-- slide -->

## üëé Not **Meaningfully** Organized
## üëé Encourages **One-Offs**
## üëé Difficult to **Automate**

<!-- slide -->

---
caption: |
  See [OddBird's **Accoutrement**](https://oddbird.net/accoutrement/)
---

## Sass **Maps**

```scss
$text-colors: (
  'default': rgb(62, 62, 60),
  'warning': rgb(255, 183, 93),
  'error': rgb(194, 57, 52),
);

.example {
  background: color('error');
}
```

<!-- slide -->

## The **Map Problem**

```scss
$colors: (
  'brand-blue': hsl(195, 85%, 35%),
  'gray': desaturate(map-get($colors, 'brand-blue'), 80%),
);
```

### **`[ERROR] Undefined variable: "$colors".`**

<!-- slide -->

## Map **Self-Reference**

```scss
$colors: (
  '_brand-pink': hsl(330, 85%, 68%),
  'escher': '#_brand-pink',
  'godel': '#escher',
  'bach': '#godel',
  'kevin bacon': '#bach' ('lighten': 20%),
);
```

<!-- slide -->

---
style:
  --align-self: 'stretch'
  background-color: 'hsl(330, 85%, 48%)'
  color: 'white'
  display: 'flex'
  align-items: 'center'
  justify-content: 'center'
---

## `color('kevin bacon')`

<!-- slide -->

## üëç **Meaningful** Relationships!
## üëç Encourages **Patterns**
## üëç **Functional** Adjustments

<!-- slide -->

## üëé **Requires** Additional Tooling

<!-- slide -->

## Even More **Layers**
**Global** Settings ¬ª **Theme** Defaults ¬ª **Component** Details

<!-- slide -->

```scss
$brand-colors: (
  '_brand-blue': hsl(195, 85%, 35%),
  '_brand-pink': hsl(330, 85%, 48%),
);

$theme-colors: (
  'text': ‚Ä¶,
  'border': ‚Ä¶,
  // ...
);

$button-colors: (
  'button-text': ‚Ä¶,
  'button-border': ‚Ä¶,
  // ...
);
```

<!-- slide -->

---
image: '/images/patterns/itcss-layers-note.png'
style:
  --image-size: 'contain'
---

<!-- slide -->

## "Code is **Communication**"
‚ÄîSarah Drasner

<!-- slide -->

```scss
.grid-span {
  width: 23.7288136%;
  margin-right: 01.6949153%;
  padding-left: 08.4745763%;
}
```

<!-- slide -->

```scss
.grid-span {
  width: ((3*4em) + (2*1em)) / ((12*4em) + (11*1em)) * 100%; // 23.7288136%
  margin-right: 1em / ((12*4em) + (11*1em)) * 100%; // 01.6949153%
  padding-left: ((1*4em) + (1*1em)) / ((12*4em) + (11*1em)); // 08.4745763%
}
```

<!-- slide -->

## Code Patterns **Add Meaning**

```scss
.grid-span {
  width: span(3);
  margin-right: gutter();
  padding-left: span(1 wide);
}
```

<!-- slide -->

```scss
// Susy Span
// ---------
/// This is the primary function in Susy ‚Äî
/// used to return the width of a span across one or more columns,
/// and any relevant gutters along the way.
/// With the default settings,
/// `span(3)` will return the width of 3 columns,
/// and the 2 intermediate gutters.
/// This can be used to set the `width` property of grid elements,
/// or `margin` and `padding`
/// to push, pull, and pad your elements.
/// @example scss - span half the grid
///   .foo {
///     width: susy-span(6 of 12);
///   }
@function susy-span(‚Ä¶) {‚Ä¶}
```

<!-- slide -->

---
caption: |
  See [Salesforce-UX *Theo*](https://github.com/salesforce-ux/theo)
---

# **YAML** & **Theo**

```yml
props:
  text_default:
    value: "rgb(62, 62, 60)"
  text_warning:
    value: "rgb(255, 183, 93)"
  text_error:
    value: "rgb(194, 57, 52)"

global:
  type: "color"
  category: "brand-colors"
```

<!-- slide -->

```yml
aliases:
  vermilion:
    value: "7, 83%"
props:
  color_vermilion:
    value: "hsla({!vermilion}, 53%, 1)"
  color_vermilion_dark:
    value: "hsla({!vermilion}, 43%, 1)"
```

<!-- slide -->

## üëç Easier to **Export** from YAML
## üëé Not A **Style Language**

<!-- slide -->

## Know The **Trade-Offs**
adjust to **your** needs‚Ä¶

<!-- slide -->

1. ~~**Why** Design Systems?~~
2. ~~Pattern **Audit**~~
3. ~~Start with **Design Tokens**~~
4. ## Integrated **Agile Process**
5. Define the **API**

<!-- slide -->

## "Less **Theory**, More **Practice**"
Less **Mockups**, More **Code**

<!-- slide -->

---
image: '/images/process/list.png'
alt: 'QuarqNet list sketch'
---

<!-- slide -->

---
image: '/images/process/qn-mockup.jpg'
alt: 'QuarqNet code sample'
---

<!-- slide -->

---
image: '/images/process/interactive.jpg'
alt: 'QuarqNet interactive mockup'
---

<!-- slide -->

## (**Ugly** Helps Focus)

<!-- slide -->

---
image: '/images/process/qasper.jpg'
alt: 'QuarqNet final'
---

<!-- slide -->

## **Iterate** on Features/Epics
sketch ¬ª wire-frame ¬ª html markup ¬ª back-end ¬ª **design**

<!-- slide -->

### Test, Test, Test
## Tight **Feedback Loop**

<!-- slide -->

## "Move Fast & **Fix Things**"
Everyone is **responsible** & **collaborating**

<!-- slide -->

### Make Patterns & Documentation
## The **Lazy** Option

<!-- slide -->

## **Automate** from **Structured Code**

<!-- slide -->

---
image: '/images/agile-systems/herman.jpg'
style:
  --image-size: 'contain'
caption: |
  OddBird's [**Herman**](https://oddbird.net/herman)
  is based on [**SassDoc**](http://sassdoc.com) syntax
----

<!-- slide -->

```scss
// SLDS Colors
// -----------
/// These are the colors we stole from SLDS system,
/// in order to create a demo.
/// @group color
/// @colors
$slds-colors: (
  'text-default': rgb(62, 62, 60),
  'text-warning': rgb(255, 183, 93),
  'text-error': rgb(194, 57, 52),
);
```

<!-- slide -->

## `/// ` **`@colors`**
![Herman Colors](/images/agile-systems/herman-colors.jpg)

<!-- slide -->

## `/// ` **`@sizes`**
![Herman Scale](/images/agile-systems/herman-scale.jpg)

<!-- slide -->

## `/// @sizes` **`{ruler}`**
![Herman Ruler](/images/agile-systems/herman-ruler.jpg)

<!-- slide -->

## `/// ` **`@ratios`**
![Herman Ratios](/images/agile-systems/herman-ratios.jpg)

<!-- slide -->

## Design System as **Artifact**
Code is a **Single Source of Truth**

<!-- slide -->

## Up-To-Date **`>`** Comprehensive
### Start small, **make it easy**, and expand‚Ä¶

<!-- slide -->

1. ~~**Why** Design Systems?~~
2. ~~Pattern **Audit**~~
3. ~~Start with **Design Tokens**~~
4. ~~Integrated **Agile Process**~~
5. ## Define the **API**

<!-- slide -->

---
image: '/images/patterns/lightning-code.jpg'
alt: 'LDS icons with markup'
---

<!-- slide -->

### `class="slds-icon` **`slds-icon-text-warning`** `slds-icon--x-small"`

<!-- slide -->

## Related Class Patterns ¬ª **Data Attributes**
icon **color** and **size** classes

<!-- slide -->

### **`data-slds-icon-color`**`="<option>"`
`.slds-icon-text-default` | `.slds-icon-text-warning` | `.slds-icon-text-error`

<!-- slide -->

## HTML Template **Logic is Great**
**pre-processors** for your markup!

<!-- slide -->

## Example: **Vue**
### `<icon :image="isSuccess` **`?`** `'checkmark'` **`:`** `'x'">`

<!-- slide -->

## **Components** Provide Meaning
### `<my-icon name="gear" />`

<!-- slide -->

## `///` **`@icons`** `templates/icons/`

<!-- slide -->

![Herman Icons](/images/agile-systems/herman-icons.jpg)

<!-- slide -->

## **Consistency** & **Accessibility**\*
*If you bake that into the pattern‚Ä¶

<!-- slide -->

## *Herman* Components

```scss
/// Navigation items, with inactive and active states.
/// @group nav
/// @example njk
///   {% import 'nav.macros.njk' as nav %}
///   {{ nav.bar(active="dashboard", items=[‚Ä¶]) }}
.nav-bar {
  /* ‚Ä¶ */
}
```

<!-- slide -->

![Herman Component](/images/agile-systems/herman-comp.jpg)

<!-- slide -->

## **¬Ø\\\_(„ÉÑ)_/¬Ø**
## **Sass-First** Breaks Down‚Ä¶
### Only **Nunjucks** For Now‚Ä¶

<!-- slide -->

## [VueDS](https://vueds.com/) (with Theo)
![Vue Design Systems](/images/agile-systems/vueds.jpg)

<!-- slide -->

## **VueDS** Components

````md
<docs>
  ```jsx
  <nav-bar active="Dashboard" :navItems="[‚Ä¶]"/>
  ```
</docs>
````

<!-- slide -->

![VueDS Component](/images/agile-systems/vueds-comp.jpg)

<!-- slide -->

## I Want **Both** :)
please‚Ä¶

<!-- slide -->

1. ~~**Why** Design Systems?~~
2. ~~Pattern **Audit**~~
3. ~~Start with **Design Tokens**~~
4. ~~Integrated **Agile Process**~~
5. ~~Define the **API**~~

<!-- slide -->

## **Meaningful** & **Structured** Code
Readable by **Humans** & **Machines**

<!-- slide -->

## **Inline** Documentation
Helps the human factors‚Ä¶

<!-- slide -->

## **Agile** & **Integrated** Process
Everyone shares a single-source‚Ä¶

<!-- slide -->

---
image: '/images/patterns/lego-site.jpg'
style:
  --image-size: 'contain'
---

<!-- slide -->

---
image: '/images/patterns/lego-helmet.jpg'
style:
  --image-size: 'contain'
---

<!-- slide -->

---
image: '/images/patterns/lego-atomic.jpg'
style:
  --image-size: 'contain'
---

<!-- slide -->

---
layout: template
---

## **Thank you**!

<!-- slide -->

---
layout: contact
form:
  email: 'birds@oddbird.net'
  next: 'https://oddbird.net/contact/thanks'
  submit: 'send it!'
---

